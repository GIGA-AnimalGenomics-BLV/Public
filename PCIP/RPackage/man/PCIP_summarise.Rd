% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCIP_summarise.R
\name{PCIP_summarise}
\alias{PCIP_summarise}
\title{Collapse results into Integration Site table}
\usage{
PCIP_summarise(PCIPbreakpoints = NULL, mergeISdistance = 200,
  mergeShearSiteDistance = 0, minDistanceLTR = 300,
  distanceFLAG = 1000)
}
\arguments{
\item{PCIPbreakpoints}{tibble. TARGET-HOST breakpoints from \code{PCIP_getBreakPoints}}

\item{mergeISdistance}{numerical. Maximal distance (Upstream/Downstream) to group reads supporting the same IS.}

\item{mergeShearSiteDistance}{numerical. Maximal distance (Upstream/Downstream) to group reads with the same shear site.}

\item{filterIS}{numerical. Only report readID for IS supported by x reads.}
}
\value{
list Field description:
\enumerate{
\item Integration Site Table [[1]].
\itemize{
\item seqnames (character) Chromosome name
\item strand (character) TARGET orientation related to the HOST genome
\item edge5.pos (double) 5' edge position into HOST genome
\item edge5.count (double) Number of reads supporting the 5' edge
\item edge3.pos (double) 3' edge position into HOST genome
\item edge3.count (double) Number of reads supporting the 3' edge
\item ID (character) TARGET location into the HOST genome formated as chr:start-end
\item count.max (double) Maximum number of reads supporting that IS (max(edge5.count, edge3.pos, na.rm = T))
}
\item Read description table [[2]].
\itemize{
\item readID (character) ID of the read
\item ID (character) TARGET location into the HOST genome formated as chr:start-end
\item strand (character) TARGET orientation related to the HOST genome
\item max.pos (character) Position (5' edge or 3' edge) supported by the most reads and use as anchor to look for variants
}
}
}
\description{
Group and count reads supporting the same breakpoint. Generate an Integration Sites (IS) table.
}
\note{
minimap2PAF <- readPairwiseAlignmentFile(minimap2PAF="my/path/to/minimap2.align")
minimap2PAF.filter <- PCIP_filter(minimap2PAF = minimap2PAF, targetName="HTLV")
minimap2PAF.breakpoints <- PCIP_getBreakPoints(PAF = minimap2PAF.filter, lengthTarget = 9091, targetName="HTLV", gapToEdge = 200)
myResults <- PCIP_summarise(PCIPbreakpoints = minimap2PAF.breakpoints, mergeISdistance = 200)
integrationSite.table <- myResults[[1]]
splitFASTQ.table <- myResults[[2]]
}
\author{
Vincent Hahaut
}
\keyword{PCIP}
